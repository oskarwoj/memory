{"version":3,"sources":["assets/images/back.png","assets/images/ipad_small.png","assets/styled.js","components/Display.js","utils/constants.js","hooks/useGame.js","components/Board.js","utils/preload.js","data/data.js","components/App.js","utils/setCards.js","index.js","assets/images/ipad.png"],"names":["module","exports","GlobalStyle","createGlobalStyle","Main","styled","div","background","backgroundSmall","Header","h1","Button","button","Game","GameBoard","Card","back","visible","css","GameBar","CardImage","img","Player","WinBoard","Display","gameStart","timeValue","count","useState","seconds","setSeconds","minutes","setMinutes","useEffect","nowTime","Date","getTime","sec","Math","floor","slice","min","clock","setInterval","clearInterval","IMGS","visibleId","useGame","winNumbers","CARDSNUMBER","setCount","checkFirst","setCheckFirst","checkSecond","setCheckSecond","verifyCards","setVerifyCardTrue","noClick","setNoClick","firstClick","setFirstClick","winningCount","setWinningCount","win","setWin","setTimeout","handleCardClick","target","idNumber","cardsArray","id","key","Board","setGameStart","time","setTime","forEach","src","Image","map","card","keys","onClick","event","gamePlay","alt","style","width","height","autoPlay","controls","loop","cards","App","start","setStart","newCards","i","random","length","push","splice","setCards","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7e9e70e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back.093132f0.png\";","module.exports = __webpack_public_path__ + \"static/media/ipad_small.cebd02a7.png\";","import styled, { css } from \"styled-components\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./images/ipad.png\";\r\nimport back from \"./images/back.png\";\r\nimport backgroundSmall from \"./images/ipad_small.png\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n::before,\r\n::after {\r\n  box-sizing: inherit;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\r\n    monospace;\r\n}\r\n\r\n`;\r\n\r\nexport const Main = styled.div`\r\n  font-family: \"Lato\", sans-serif;\r\n  margin: 0 auto;\r\n  max-width: 1000px;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: url(\"${background}\");\r\n  background-position: center;\r\n  background-size: cover;\r\n  text-align: center;\r\n  color: white;\r\n\r\n  @media (max-width: 550px) {\r\n    background-image: url(\"${backgroundSmall}\");\r\n    font-size: 45px;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.h1`\r\n  font-size: 70px;\r\n\r\n  @media (max-width: 550px) {\r\n    font-size: 50px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: black;\r\n  border: 2px solid white;\r\n  font-size: 30px;\r\n  color: white;\r\n  /* transition: 0.5s 0.2s; */\r\n\r\n  box-shadow: 0 0 10px 0px white;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const Game = styled.div`\r\n  max-width: 500px;\r\n  width: 90vw;\r\n`;\r\n\r\nexport const GameBoard = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 1fr);\r\n  grid-template-rows: repeat(4, 1fr);\r\n  margin-top: 12px;\r\n  /* transform: rotateY(180deg); */\r\n\r\n  @media (max-width: 550px) {\r\n    justify-items: center;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  height: 120px;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  background-image: url(\"${back}\");\r\n  rotate: (180deg);\r\n  background-size: cover;\r\n  background-position: center;\r\n  transition: all 0.5s;\r\n  \r\n  @media (max-width: 550px) {\r\n    height: 100px;\r\n    width: 100px;\r\n    margin: 5px 0;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    height: 70px;\r\n    width: 70px;\r\n  }\r\n\r\n  ${({ visible }) =>\r\n    visible &&\r\n    css`\r\n      transform: rotateY(180deg);\r\n    `}\r\n  \r\n`;\r\n\r\nexport const StyledDisplay = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 35px;\r\n`;\r\n\r\nexport const GameBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 35px;\r\n  padding: 0 30px;\r\n\r\n  @media (max-width: 550px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nexport const CardImage = styled.img`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Player = styled.div`\r\n  margin-top: 15px;\r\n  align-self: center;\r\n`;\r\n\r\nexport const WinBoard = styled.div`\r\n  font-size: 50px;\r\n\r\n  @media (max-width: 550px) {\r\n    font-size: 40px;\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Display = ({ gameStart, timeValue, count }) => {\r\n  const [seconds, setSeconds] = useState(null);\r\n  const [minutes, setMinutes] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (gameStart) {\r\n      const updatedTime = new Date().getTime();\r\n      const nowTime = updatedTime - timeValue;\r\n\r\n      const sec = (\"0\" + (Math.floor(nowTime / 1000) % 60)).slice(-2);\r\n      const min = (\"0\" + (Math.floor(nowTime / 60000) % 60)).slice(-2);\r\n\r\n      const clock = setInterval(() => {\r\n        setSeconds(sec);\r\n        setMinutes(min);\r\n      }, 1000);\r\n\r\n      return () => clearInterval(clock);\r\n    }\r\n  }, [seconds, gameStart, timeValue]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>Play Time</div>\r\n        <div>\r\n          {minutes}:{seconds}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>Count</div>\r\n        <div>{count}</div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","export const CARDSNUMBER = 16;\r\n\r\nexport const URL =\r\n  \"https://raw.githubusercontent.com/oskarwoj/memory/master/src/assets/music/super_mario.mp3\";\r\n\r\nexport const IMGS = [\r\n  \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/blue.png?raw=true\",\r\n  \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/bullet.png?raw=true\",\r\n  \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/coin.png?raw=true\",\r\n  \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/fish.png?raw=true\",\r\n  \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/flower.png?raw=true\",\r\n  \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/monster.png?raw=true\",\r\n  \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/owl.png?raw=true\",\r\n];\r\n","import { useState, useEffect } from \"react\";\r\nimport { cardsArray } from \"../components/App\";\r\nimport { CARDSNUMBER } from \"../utils/constants\";\r\n\r\nconst visible = [null];\r\nconst visibleId = [null, null];\r\n\r\nconst useGame = () => {\r\n  const winNumbers = Math.floor(CARDSNUMBER / 2);\r\n  // const winNumbers = 0;\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [checkFirst, setCheckFirst] = useState(null);\r\n  const [checkSecond, setCheckSecond] = useState(null);\r\n  const [verifyCards, setVerifyCardTrue] = useState(false);\r\n  const [noClick, setNoClick] = useState(false);\r\n  const [firstClick, setFirstClick] = useState(true);\r\n  const [winningCount, setWinningCount] = useState(0);\r\n  const [win, setWin] = useState(true);\r\n\r\n  const handleCardClick = ({ target }) => {\r\n    const idNumber = cardsArray[target.id].id;\r\n    visible[idNumber] = true;\r\n\r\n    if (firstClick) {\r\n      setCheckFirst(cardsArray[target.id].key);\r\n      visibleId[0] = idNumber;\r\n      setFirstClick(false);\r\n    } else {\r\n      setCheckSecond(cardsArray[target.id].key);\r\n      visibleId[1] = idNumber;\r\n      setNoClick(true);\r\n      setCount(count + 1);\r\n      setVerifyCardTrue(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (verifyCards) {\r\n      if (checkFirst === checkSecond) {\r\n        setNoClick(false);\r\n        setVerifyCardTrue(false);\r\n        setFirstClick(true);\r\n        setCheckFirst(null);\r\n        setCheckSecond(null);\r\n        setWinningCount(winningCount + 1);\r\n      }\r\n\r\n      if (checkFirst !== checkSecond) {\r\n        setTimeout(() => {\r\n          setNoClick(false);\r\n          setVerifyCardTrue(false);\r\n          visible[visibleId[0]] = false;\r\n          visible[visibleId[1]] = false;\r\n          setFirstClick(true);\r\n          setCheckFirst(null);\r\n          setCheckSecond(null);\r\n        }, 1000);\r\n      }\r\n    }\r\n  }, [checkFirst, checkSecond, verifyCards, winningCount]);\r\n\r\n  useEffect(() => {\r\n    winningCount === winNumbers ? setWin(false) : setWin(true);\r\n  }, [winningCount, winNumbers]);\r\n\r\n  return {\r\n    win,\r\n    visible,\r\n    noClick,\r\n    count,\r\n    handleCardClick,\r\n  };\r\n};\r\n\r\nexport default useGame;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Display from \"./Display\";\r\nimport { cardsArray } from \"./App\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport useGame from \"../hooks/useGame\";\r\nimport { IMGS } from \"../utils/constants\";\r\nimport { preload } from \"../utils/preload\";\r\nimport { URL } from \"../utils/constants\";\r\nimport {\r\n  Game,\r\n  GameBoard,\r\n  Card,\r\n  GameBar,\r\n  CardImage,\r\n  Player,\r\n  WinBoard,\r\n} from \"../assets/styled\";\r\n\r\nconst Board = () => {\r\n  const [gameStart, setGameStart] = useState(false);\r\n  const [time, setTime] = useState(null);\r\n\r\n  const { win, visible, noClick, count, handleCardClick } = useGame();\r\n\r\n  useEffect(() => {\r\n    preload(IMGS);\r\n  });\r\n\r\n  const gamePlay = (event) => {\r\n    if (!gameStart) {\r\n      setTime(new Date().getTime());\r\n    }\r\n    setGameStart(true);\r\n    handleCardClick(event);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {win ? (\r\n        <Game>\r\n          <GameBar>\r\n            <Display\r\n              timeValue={time}\r\n              gameStart={gameStart}\r\n              count={count}\r\n            ></Display>\r\n          </GameBar>\r\n          <GameBoard>\r\n            {cardsArray.map((card, keys) => (\r\n              <Card\r\n                visible={visible[keys]}\r\n                id={card.id}\r\n                key={card.id}\r\n                onClick={\r\n                  !visible[keys] && !noClick ? (event) => gamePlay(event) : null\r\n                }\r\n              >\r\n                {visible[keys] && (\r\n                  <CardImage src={card.img} alt=\"card\"></CardImage>\r\n                )}\r\n              </Card>\r\n            ))}\r\n          </GameBoard>\r\n          <Player>\r\n            <ReactAudioPlayer\r\n              style={{ width: \"180px\", height: \"20px\" }}\r\n              src={URL}\r\n              autoPlay\r\n              controls\r\n              loop\r\n            />\r\n          </Player>\r\n        </Game>\r\n      ) : (\r\n        <WinBoard>\r\n          <h1>You win!</h1>\r\n          <hr />\r\n          <h3> It took you {count} moves</h3>\r\n        </WinBoard>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","export const preload = (srcArray) => {\r\n  srcArray.forEach((src) => {\r\n    const img = new Image();\r\n    img.src = src;\r\n  });\r\n};\r\n","export const cards = [\r\n  {\r\n    id: 0,\r\n    key: 0,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/blue.png?raw=true\",\r\n  },\r\n  {\r\n    id: 1,\r\n    key: 0,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/blue.png?raw=true\",\r\n  },\r\n  {\r\n    id: 2,\r\n    key: 1,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/bullet.png?raw=true\",\r\n  },\r\n  {\r\n    id: 3,\r\n    key: 1,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/bullet.png?raw=true\",\r\n  },\r\n  {\r\n    id: 4,\r\n    key: 2,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/coin.png?raw=true\",\r\n  },\r\n  {\r\n    id: 5,\r\n    key: 2,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/coin.png?raw=true\",\r\n  },\r\n  {\r\n    id: 6,\r\n    key: 3,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/fish.png?raw=true\",\r\n  },\r\n  {\r\n    id: 7,\r\n    key: 3,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/fish.png?raw=true\",\r\n  },\r\n  {\r\n    id: 8,\r\n    key: 4,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/flower.png?raw=true\",\r\n  },\r\n  {\r\n    id: 9,\r\n    key: 4,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/flower.png?raw=true\",\r\n  },\r\n  {\r\n    id: 10,\r\n    key: 5,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/monster.png?raw=true\",\r\n  },\r\n  {\r\n    id: 11,\r\n    key: 5,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/monster.png?raw=true\",\r\n  },\r\n  {\r\n    id: 12,\r\n    key: 6,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/owl.png?raw=true\",\r\n  },\r\n  {\r\n    id: 13,\r\n    key: 6,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/owl.png?raw=true\",\r\n  },\r\n  {\r\n    id: 14,\r\n    key: 7,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/star.png?raw=true\",\r\n  },\r\n  {\r\n    id: 15,\r\n    key: 7,\r\n    img:\r\n      \"https://github.com/oskarwoj/memory/blob/master/src/assets/images/star.png?raw=true\",\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\r\nimport { Main, Header, Button, GlobalStyle } from \"../assets/styled\";\r\nimport Board from \"./Board\";\r\nimport { setCards } from \"../utils/setCards\";\r\n\r\nexport const cardsArray = [];\r\n\r\nconst App = () => {\r\n  const [start, setStart] = useState(false);\r\n\r\n  const gameStart = () => {\r\n    setCards();\r\n    setStart(true);\r\n  };\r\n\r\n  return (\r\n    <Main>\r\n      <GlobalStyle />\r\n      {!start ? (\r\n        <>\r\n          <Header>Mario Memory</Header>\r\n          <Button onClick={() => gameStart()}>START</Button>\r\n        </>\r\n      ) : (\r\n        <Board></Board>\r\n      )}\r\n    </Main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { cards } from \"../data/data\";\r\nimport { CARDSNUMBER } from \"./constants\";\r\nimport { cardsArray } from \"../components/App\";\r\n\r\nexport const setCards = () => {\r\n  const newCards = cards.slice(0, CARDSNUMBER);\r\n\r\n  for (let i = 0; i < CARDSNUMBER; i++) {\r\n    let random = Math.floor(Math.random() * newCards.length);\r\n\r\n    cardsArray.push(newCards[random]);\r\n    newCards.splice(random, 1);\r\n    cardsArray[i].id = i;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/ipad.b7cf87a3.png\";"],"sourceRoot":""}